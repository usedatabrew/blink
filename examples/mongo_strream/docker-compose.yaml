version: "3.8"

services:
  mongo1:
    depends_on:
      - mongo2
      - mongo3
    image: mongo:6.0-focal
    container_name: mongo1
    hostname: mongo1
    networks:
      - connector-net
    ports:
      - "27017:27017"
    command: [ "--replSet", "mongodb-nats-connector", "--bind_ip_all" ]
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: test $$(echo "rs.initiate({_id:\"mongodb-nats-connector\",members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:27017\"},{_id:2,host:\"mongo3:27017\"}]}).ok || rs.status().ok" | mongosh --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s
  mongo2:
    image: mongo:6.0-focal
    container_name: mongo2
    hostname: mongo2
    networks:
      - connector-net
    ports:
      - "27018:27017"
    command: [ "--replSet", "mongodb-nats-connector", "--bind_ip_all" ]
    deploy:
      restart_policy:
        condition: on-failure
  mongo3:
    image: mongo:6.0-focal
    container_name: mongo3
    hostname: mongo3
    networks:
      - connector-net
    ports:
      - "27019:27017"
    command: [ "--replSet", "mongodb-nats-connector", "--bind_ip_all" ]
    deploy:
      restart_policy:
        condition: on-failure

networks:
  connector-net:
    driver: bridge